/* ported from: https:'github.com/sanni/cartreader/blob/master/Cart_Reader/N64.ino
 *
 */
Sub flash_printID(baseAdr AS DWord)
			N64_SetAddress(baseAdr + (&H555 << 1)) 
			N64_writeData(&HAA)
			N64_SetAddress(baseAdr + (&H2AA << 1))
			N64_writeData(&H55)
			N64_SetAddress(baseAdr + (&H555 << 1))
			N64_writeData(&H90)

			  '' Read manufacturer ID
			N64_SetAddress(baseAdr)
			N64_readRequest(2)

			'RESET
			N64_SetAddress(baseAdr )
			N64_writeData(&HFF)

			Dim inbuf[N64_DUMP_BUFFER_SIZE] AS Byte,inSize AS DWord
			FTDI_SendCommand()
			FT_Read(hFT,inbuf,4,inSize)

			Dump(inbuf,4,baseAdr)

			Dim mfID AS Word, deviceID AS Word
			mfID=GetWord(inbuf+0)
			deviceID=GetWord(inbuf+2)
			printf(ex"ManufactureID : %04X  DeviceID : %04X\n",mfID,deviceID)

			'https:'www.jedec.org/sites/default/files/docs/JEP106AJ.pdf
			If mfID>>8 = &H89 Then Print "Intel"
			Print
End Sub

' ChipErase‚Í•·‚©‚È‚©‚Á‚½
Sub IntelFhash_ChipErase(baseAdr AS DWord)
	
	N64_SetAddress(baseAdr + (&H555 << 1)) 
	N64_writeData(&HAA)
	N64_SetAddress(baseAdr + (&H2AA << 1))
	N64_writeData(&H55)
	N64_SetAddress(baseAdr + (&H555 << 1))
	N64_writeData(&H80)
	N64_SetAddress(baseAdr + (&H555 << 1))
	N64_writeData(&HAA)
	N64_SetAddress(baseAdr + (&H2AA << 1))
	N64_writeData(&H55)
	N64_SetAddress(baseAdr + (&H555 << 1))
	N64_writeData(&H10)
	
	FTDI_SendCommand()

	Dim status AS Word,inSize AS DWord
	Do 
		N64_SetAddress(baseAdr)
		N64_readRequest(1)

		FTDI_SendCommand()
		FT_Read(hFT,VarPtr(status),2,inSize)

		printf(ex"Status = %08X\n", status)
		if status And &H0080 Then
			ExitDo
		End If
	Loop
End Sub

Sub IntelFhash_Reset(baseAdr AS DWord)
	N64_SetAddress(baseAdr )
	N64_writeData(&HFF)
End Sub

Sub IntelFhash_Erase(baseAdr AS DWord)
	IntelFhash_Reset(baseAdr)
	FTDI_SendCommand()

	Dim status AS DWord,inSize AS DWord, retry AS DWord
	Dim currBlock AS DWord


	' Erase 4 blocks with 16kwords each
	For currBlock = 0 To &H20000 Step &H8000
		printf(ex"block: %08Xh- \n", currBlock)

	    ' Unlock block command
	    N64_SetAddress(baseAdr + currBlock)
	    N64_writeData(&H60)
	    N64_SetAddress(baseAdr + currBlock)
	    N64_writeData(&HD0)

			FTDI_SendCommand()

	    ' Erase command
	    N64_SetAddress(baseAdr + currBlock)
	    N64_writeData(&H20)
	    N64_SetAddress(baseAdr + currBlock)
	    N64_writeData(&HD0)
		FTDI_SendCommand()
		Do 
			N64_SetAddress(baseAdr + currBlock)
			FTDI_SendCommand()
			N64_readRequest(1)
			FTDI_SendCommand()

			FT_Read(hFT,VarPtr(status),2,inSize)

			printf(ex"Status = %08X, %d\r", status, retry)
			if status And &H0080 Then _
				ExitDo

			retry++
		Loop
	Next currBlock

	IntelFhash_Reset(baseAdr)
End Sub